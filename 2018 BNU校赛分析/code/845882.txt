#include <bits/stdc++.h>

#define rep(i,s,t) for(int i = s;i <= t;i ++)
#define dow(i,t,s) for(int i = t;i >= s;i --)

#define db double
#define VI vector<int>
#define LL long long

using namespace std;
const int N = 100010;

int a[N] , n , k , T , tot , num[1010] , v[1010] , fac[100010];
LL ans;


bool C(int n , int m)
{
	return fac[n] - fac[m] - fac[n - m] == 0;
}
void DFS(int x , int sum , int ste)
{
	if(ste == k)
	{
		ans ^= 1ll * sum * sum ;
		return ;
	}
	if(x > tot)return ;
	rep(i,0,min(k - ste , num[x]))
	{
		if(C(num[x] , i))DFS(x + 1 , sum + v[x] * i , ste + i);
	}
}
int main ()
{
    //freopen("in.in","r",stdin);
    scanf("%d",&T);
    rep(i,1,100000)
    {
    	fac[i] = fac[i - 1];
    	int x = i;
    	while(x % 2 == 0)
    	{
    		fac[i] ++;
    		x /= 2;
		}
	}
    while(T --)
    {
    	ans = tot = 0;
    	scanf("%d%d",&n,&k);
    	rep(i,1,n)scanf("%d",&a[i]);
    	sort(a + 1 , a + 1 + n);
    	
    	int l = 1 , r;
    	for(;l <= n;l = r + 1)
    	{
    		r = l;
    		while(r + 1 <= n && a[r + 1] == a[l])r ++;
    		num[++ tot] = r - l + 1;
			v[tot] = a[l];	
		}
		DFS(1 , 0 , 0);
    	cout << ans << endl;
	}
    return 0;

}
