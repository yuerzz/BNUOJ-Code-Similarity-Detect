#include<bits/stdc++.h>
#define ll long long
#define pb push_back
using namespace std;
namespace fastIO{
	#define BUF_SIZE 100000
	//fread -> read
	bool IOerror=0;
	inline char nc(){static char buf[BUF_SIZE],*p1=buf+BUF_SIZE,*pend=buf+BUF_SIZE;if(p1==pend){p1=buf;pend=buf+fread(buf,1,BUF_SIZE,stdin);if(pend==p1){IOerror=1;return -1;}}return *p1++;}
	inline bool blank(char ch){return ch==' '||ch=='\n'||ch=='\r'||ch=='\t';}
	inline void read(ll &x){char ch;ll f=1;while(blank(ch=nc()));while (ch=='-')f=-f,ch=nc();if(IOerror)return;for(x=ch-'0';(ch=nc())>='0'&&ch<='9';x=x*10+ch-'0');x*=f;}
	inline void read(int &x){char ch;int f=1;while(blank(ch=nc()));while (ch=='-')f=-f,ch=nc();if(IOerror)return;for(x=ch-'0';(ch=nc())>='0'&&ch<='9';x=x*10+ch-'0');x*=f;}
	inline void read(char* s){char ch;while(blank(ch=nc()));if(IOerror)return;int i=0;for (;!blank(ch);s[i++]=ch,ch=nc());s[i]='\0';}
	#undef BUF_SIZE
};
using namespace fastIO;
inline int read()
{
	int x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}
int n,m;
struct edge{int to,next,v;}e[200010];
int head[100010],cnt;
inline void ins(int u,int v,int w)
{
    e[++cnt].to=v;
    e[cnt].v=w;
    e[cnt].next=head[u];
    head[u]=cnt;
}
inline void insert(int u,int v,int w)
{
    ins(u,v,w);
    ins(v,u,w);
}
ll c[100010],d[100010];
bool mrk[100010];
inline bool jud(ll x)
{
    queue<int>q;
    memset(mrk,0,sizeof mrk);
    int res=n;
    for (int i=1;i<=n;i++)
    {
        d[i]=c[i];
        if (d[i]<=x)q.push(i),mrk[i]=1,res--;
    }
    while (!q.empty())
    {
        int now=q.front();q.pop();
        for (int i=head[now];i;i=e[i].next)
        {
            d[e[i].to]-=e[i].v;
            if (d[e[i].to]<=x&&!mrk[e[i].to])q.push(e[i].to),mrk[e[i].to]=1,res--;
        }
    }
    return res==0;
}
inline void work(int cur)
{
    memset(head,0,sizeof head);cnt=0;
    memset(c,0,sizeof c);
    scanf("%d%d",&n,&m);
    for (int i=1;i<=m;i++)
    {
        int x,y,z;scanf("%d%d%d",&x,&y,&z);
        insert(x,y,z);
        c[x]+=z;c[y]+=z;
    }
    ll l=1,r=1LL<<50,ans=0;
    while (l<=r)
    {
        ll mid=(l+r)>>1;
        if (jud(mid))ans=mid,r=mid-1;
        else l=mid+1;
    }
    printf("%lld\n",ans);
}
int main()
{
    int T,cnT=0;
    T=read();
    //T=1;
    while (T--)work(++cnT);
    return 0;
}
