#include <iostream>
#include <cstdio>
#include <cstring>
#include <utility>
#include <queue>
#include <algorithm>
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define REP(I,N) for (I=0;I<N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)
using namespace std;
typedef long long LL;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3f;
const int maxn=1e6+7;

LL Abs(LL x){return x>0?x:-x;}

LL A[maxn],B[maxn];
LL f[107][107][2],g[107][107][2];
bool cmp(int x,int y){return x>y;}
int main(){
    int T;
    scanf("%d",&T);
    while (T--){
        int n,m;
        int i,j,k;
        scanf("%d%d",&n,&m);
        FOR(i,1,n) scanf("%d",&A[i]);
        FOR(i,1,m) scanf("%d",&B[i]);
        sort(B+1,B+1+m,cmp);
        FOR(j,0,m+1)
            rFOR(k,0,m+1)
                g[j][k][0]=g[j][k][1]=-INF;
        g[1][m][1]=0;
        FOR(i,0,n){
            FOR(j,1,m+1){
                rFOR(k,j-1,m){
                    f[j][k][1]=max(f[j][k+1][0],g[j][k][0]);
                    f[j][k][1]=max(f[j][k][1],g[j][k][1]);
                    f[j][k][0]=max(g[j][k][1]+A[i],f[j-1][k][1]+B[j-1]);
//                    printf("%d %d %d: %lld(not) %lld(could)\n",i,j,k,f[j][k][0],f[j][k][1]);
                }
            }FOR(j,1,m+1) rFOR(k,j-1,m){
                g[j][k][0]=f[j][k][0];
                g[j][k][1]=f[j][k][1];
            }
        }LL ans=0;
        FOR(i,1,m) ans=max(ans,max(f[i][i-1][1],f[i][i-1][0]));
        printf("%lld\n",ans);
    }
}
/*
2
2 2
2 2
1 1
3 2
8 2 7
1 5
*/
