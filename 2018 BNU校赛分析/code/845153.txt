#include<bits/stdc++.h>
#define ll long long
using namespace std;
namespace fastIO{
	#define BUF_SIZE 100000
	//fread -> read
	bool IOerror=0;
	inline char nc(){static char buf[BUF_SIZE],*p1=buf+BUF_SIZE,*pend=buf+BUF_SIZE;if(p1==pend){p1=buf;pend=buf+fread(buf,1,BUF_SIZE,stdin);if(pend==p1){IOerror=1;return -1;}}return *p1++;}
	inline bool blank(char ch){return ch==' '||ch=='\n'||ch=='\r'||ch=='\t';}
	inline void read(ll &x){char ch;ll f=1;while(blank(ch=nc()));while (ch=='-')f=-f,ch=nc();if(IOerror)return;for(x=ch-'0';(ch=nc())>='0'&&ch<='9';x=x*10+ch-'0');x*=f;}
	inline void read(int &x){char ch;int f=1;while(blank(ch=nc()));while (ch=='-')f=-f,ch=nc();if(IOerror)return;for(x=ch-'0';(ch=nc())>='0'&&ch<='9';x=x*10+ch-'0');x*=f;}
	inline void read(char* s){char ch;while(blank(ch=nc()));if(IOerror)return;int i=0;for (;!blank(ch);s[i++]=ch,ch=nc());s[i]='\0';}
	#undef BUF_SIZE
};
using namespace fastIO;
inline ll read()
{
	ll x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}
int n,m,k;
int a[100010],b[100010],c[100010];
ll f[100010],g[100010];
ll lm[100010],rm[100010];
inline int bsearch1(int* a,int l,int r,int x)
{
    int s=-1;
    while (l<=r)
    {
        int mid=(l+r)>>1;
        if (a[mid]<=x)s=mid,l=mid+1;
        else r=mid-1;
    }
    return s;
}
inline int bsearch2(int* a,int l,int r,int x)
{
    int s=-1;
    while (l<=r)
    {
        int mid=(l+r)>>1;
        if (a[mid]>=x)s=mid,r=mid-1;
        else l=mid+1;
    }
    return s;
}
inline void work(int cur)
{
    scanf("%d%d%d",&n,&m,&k);
    for (int i=1;i<=n;i++)scanf("%d",a+i);sort(a+1,a+n+1);
    for (int i=1;i<=m;i++)scanf("%d",b+i);sort(b+1,b+m+1);
    for (int i=1;i<=k;i++)scanf("%d",c+i);sort(c+1,c+k+1);
    for (int i=1;i<=m;i++)
    {
        int fst=bsearch1(a,1,n,b[i]),lst=bsearch2(a,1,n,b[i]);
        if (fst==-1)f[i]=abs(b[i]-a[lst]);
        else if (lst==-1)f[i]=abs(b[i]-a[fst]);
        else f[i]=min(abs(b[i]-a[fst]),abs(b[i]-a[lst]));
    }
    lm[0]=1ll<<60;
    for (int i=1;i<=m;i++)lm[i]=min(lm[i-1],f[i]-b[i]);
    rm[m+1]=1ll<<60;
    for (int i=m;i>=1;i--)rm[i]=min(rm[i+1],f[i]+b[i]);
    ll ans=1ll<<60;
    for (int i=1;i<=k;i++)
    {
        int fst=bsearch1(b,1,m,c[i]),lst=bsearch2(b,1,m,c[i]);
        if (fst==-1)g[i]=rm[lst]-c[i];
        else if (lst==-1)g[i]=lm[fst]+c[i];
        else g[i]=min(rm[lst]-c[i],lm[fst]+c[i]);
        ans=min(ans,g[i]);
    }
    printf("%lld\n",ans+3);
}
int main()
{
    int T,cnT=0;
    scanf("%d",&T);
    //T=1;
    while (T--)work(++cnT);
    return 0;
}
