//copyright dyj (c) 2018
//BNU校赛留念
//problems:
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <cstring>
#include <climits>
#define	NAME "D"

using namespace std;

long long T, N, M, K;
long long ava[100005], avb[100005], avc[100005];
long long disl[100005], disr[100005];

void readin() {
	scanf("%lld%lld%lld", &N, &M, &K);
	for(long long i = 1; i <= N; ++i) {
		scanf("%lld", ava+i);
	}
	for(long long i = 1; i <= M; ++i) {
		scanf("%lld", avb+i);
	}
	for(long long i = 1; i <= K; ++i) {
		scanf("%lld", avc+i);
	}
}

long long iabs(long long x) {
	return x < 0 ? -x : x;
}

void process() {
	long long a, ans = LLONG_MAX;
	for(long long i = 1; i <= M; ++i) {
		a = lower_bound(ava+1, ava+1+N, avb[i])-ava;
#ifdef DEBUG
		printf("$%lld ", a);
#endif
		if(a == 1) {
			disl[i] = iabs(ava[a]-avb[i]);
		} else if(a == N+1) {
			disl[i] = iabs(ava[a-1]-avb[i]);
		} else {
			disl[i] = min(iabs(ava[a]-avb[i]), iabs(ava[a-1]-avb[i]));
		}

		a = lower_bound(avc+1, avc+1+K, avb[i])-avc;
#ifdef DEBUG
		printf("$%lld \n", a);
#endif
		if(a == 1) {
			disr[i] = iabs(avc[a]-avb[i]);
		} else if(a == K+1) {
			disr[i] = iabs(avc[a-1]-avb[i]);
		} else {
			disr[i] = min(iabs(avc[a]-avb[i]), iabs(avc[a-1]-avb[i]));
		}
		ans = min(disl[i]+disr[i], ans);
#ifdef DEBUG
		printf("#	%lld: %lld %lld, %lld\n", i, disl[i], disr[i], ans);
#endif
	}
	printf("%lld\n", ans+3);
}

int main() {
#ifdef DEBUG
	freopen(NAME".in", "r", stdin);
#endif
	scanf("%lld", &T);
	while(T--) {
		readin();
		process();
	}

	return 0;
}
